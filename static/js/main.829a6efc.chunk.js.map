{"version":3,"sources":["components/searchCity/listOfCountry.js","action/index.js","components/searchCity/ListOfCity.js","components/searchCity/SearchInput.js","components/searchCity/index.js","components/App.js","reducers/index.js","index.js"],"names":["exports","city","name","code","cities","locations","count","fetchCity","countries","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","openaq","response","wrap","_context","prev","next","axios","create","baseURL","params","country","limit","parameter","sent","get","abrupt","type","payload","stop","_x","apply","this","arguments","_fetchCityDetails","lodash","memoize","_ref2","_callee2","cityName","mediawiki","_context2","action","prop","search","origin","format","data","_x2","_x3","ListOfCity","_this","props","renderList","react_default","createElement","className","resultsCityList","results","fullListOfCity","sortedList","lastUpdateTime","d","Date","today","getFullYear","getMonth","slice","getDate","push","sort","x","y","measurements","value","forEach","lastUpdated","console","log","filterCityList","toConsumableArray","Set","map","item","index","fetchCityDetails","dataTrget","concat","description","link","lastUpdate","pollution","el","parseFloat","toFixed","undefined","cityDescription","key","id","role","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","href","React","Component","connect","state","citiesDescription","SearchInput","term","errors","check","toLowerCase","countryName","onInputChange","event","setState","target","onFormSubmit","preventDefault","sessionStorage","setItem","getItem","onSubmit","placeholder","onChange","onClick","cityList","citiesList","Search","searchCity_SearchInput","searchCity_ListOfCity","App","searchCity","combineReducers","length","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.829a6efc.chunk.js","sourcesContent":[" exports.city =  [\r\n    { name: \"Algeria\", code: \"DZ\", cities: 1, locations: 1, count: 800 },\r\n    { name: \"Andorra\", code: \"AD\", cities: 2, locations: 3, count: 78653 },\r\n    { name: \"Argentina\", code: \"AR\", cities: 1, locations: 4, count: 14976 },\r\n    {\r\n      name: \"Australia\",\r\n      code: \"AU\",\r\n      cities: 21,\r\n      locations: 106,\r\n      count: 5783352\r\n    },\r\n    { name: \"Austria\", code: \"AT\", cities: 16, locations: 306, count: 1521351 },\r\n    { name: \"Bahrain\", code: \"BH\", cities: 1, locations: 1, count: 35990 },\r\n    { name: \"Bangladesh\", code: \"BD\", cities: 1, locations: 2, count: 27597 },\r\n    { name: \"Belgium\", code: \"BE\", cities: 14, locations: 198, count: 1638484 },\r\n    {\r\n      name: \"Bosnia and Herzegovina\",\r\n      code: \"BA\",\r\n      cities: 10,\r\n      locations: 22,\r\n      count: 994174\r\n    },\r\n    { name: \"Brazil\", code: \"BR\", cities: 72, locations: 119, count: 2812094 },\r\n    { name: \"Canada\", code: \"CA\", cities: 12, locations: 202, count: 4596562 },\r\n    { name: \"Chile\", code: \"CL\", cities: 150, locations: 137, count: 6572158 },\r\n    {\r\n      name: \"China\",\r\n      code: \"CN\",\r\n      cities: 388,\r\n      locations: 1449,\r\n      count: 48910046\r\n    },\r\n    { name: \"Colombia\", code: \"CO\", cities: 11, locations: 32, count: 336468 },\r\n    { name: \"Croatia\", code: \"HR\", cities: 17, locations: 50, count: 667058 },\r\n    { name: \"Curaçao\", code: \"CW\", cities: 1, locations: 1, count: 15457 },\r\n    {\r\n      name: \"Czech Republic\",\r\n      code: \"CZ\",\r\n      cities: 15,\r\n      locations: 200,\r\n      count: 4402118\r\n    },\r\n    { name: \"Denmark\", code: \"DK\", cities: 7, locations: 25, count: 443261 },\r\n    { name: \"Ethiopia\", code: \"ET\", cities: 1, locations: 2, count: 43725 },\r\n    { name: \"Finland\", code: \"FI\", cities: 35, locations: 108, count: 1497245 },\r\n    {\r\n      name: \"France\",\r\n      code: \"FR\",\r\n      cities: 135,\r\n      locations: 1175,\r\n      count: 18268969\r\n    },\r\n    {\r\n      name: \"Germany\",\r\n      code: \"DE\",\r\n      cities: 36,\r\n      locations: 1027,\r\n      count: 11249837\r\n    },\r\n    { name: \"Ghana\", code: \"GH\", cities: 1, locations: 11, count: 1595 },\r\n    { name: \"Gibraltar\", code: \"GI\", cities: 2, locations: 6, count: 40842 },\r\n    { name: \"Hong Kong\", code: \"HK\", cities: 9, locations: 16, count: 1037238 },\r\n    { name: \"Hungary\", code: \"HU\", cities: 14, locations: 50, count: 1537427 },\r\n    { name: \"India\", code: \"IN\", cities: 212, locations: 365, count: 13337476 },\r\n    { name: \"Indonesia\", code: \"ID\", cities: 2, locations: 3, count: 59918 },\r\n    { name: \"Iraq\", code: \"IQ\", cities: 1, locations: 1, count: 3112 },\r\n    { name: \"Ireland\", code: \"IE\", cities: 16, locations: 38, count: 266081 },\r\n    {\r\n      name: \"Israel\",\r\n      code: \"IL\",\r\n      cities: 14,\r\n      locations: 159,\r\n      count: 195533826\r\n    },\r\n    { name: \"Italy\", code: \"IT\", cities: 45, locations: 104, count: 2741963 },\r\n    { name: \"Kazakhstan\", code: \"KZ\", cities: 1, locations: 1, count: 8177 },\r\n    { name: \"Kenya\", code: \"KE\", cities: 1, locations: 2, count: 2842 },\r\n    { name: \"Kosovo\", code: \"XK\", cities: 8, locations: 9, count: 174959 },\r\n    { name: \"Kuwait\", code: \"KW\", cities: 1, locations: 1, count: 18372 },\r\n    { name: \"Kyrgyzstan\", code: \"KG\", cities: 1, locations: 1, count: 3130 },\r\n    {\r\n      name: \"Lao People's Democratic Republic\",\r\n      code: \"LA\",\r\n      cities: 1,\r\n      locations: 1,\r\n      count: 753\r\n    },\r\n    { name: \"Latvia\", code: \"LV\", cities: 4, locations: 4, count: 127242 },\r\n    { name: \"Lithuania\", code: \"LT\", cities: 8, locations: 17, count: 359174 },\r\n    { name: \"Luxembourg\", code: \"LU\", cities: 3, locations: 7, count: 312587 },\r\n    {\r\n      name: \"Macedonia, the Former Yugoslav Republic of\",\r\n      code: \"MK\",\r\n      cities: 16,\r\n      locations: 30,\r\n      count: 914996\r\n    },\r\n    { name: \"Malta\", code: \"MT\", cities: 4, locations: 4, count: 176161 },\r\n    { name: \"Mexico\", code: \"MX\", cities: 5, locations: 101, count: 2859635 },\r\n    { name: \"Mongolia\", code: \"MN\", cities: 25, locations: 42, count: 2790190 },\r\n    { name: \"Myanmar\", code: \"MM\", cities: 1, locations: 1, count: 1310 },\r\n    { name: \"Nepal\", code: \"NP\", cities: 1, locations: 4, count: 69344 },\r\n    {\r\n      name: \"Netherlands\",\r\n      code: \"NL\",\r\n      cities: 68,\r\n      locations: 113,\r\n      count: 7424868\r\n    },\r\n    { name: \"Nigeria\", code: \"NG\", cities: 1, locations: 1, count: 2541 },\r\n    { name: \"Norway\", code: \"NO\", cities: 37, locations: 83, count: 2694604 },\r\n    { name: \"Pakistan\", code: \"PK\", cities: 4, locations: 4, count: 4886 },\r\n    { name: \"Peru\", code: \"PE\", cities: 1, locations: 21, count: 692438 },\r\n    { name: \"Philippines\", code: \"PH\", cities: 1, locations: 1, count: 958 },\r\n    { name: \"Poland\", code: \"PL\", cities: 148, locations: 208, count: 4243113 },\r\n    { name: \"Portugal\", code: \"PT\", cities: 16, locations: 67, count: 2464062 },\r\n    {\r\n      name: \"Russian Federation\",\r\n      code: \"RU\",\r\n      cities: 1,\r\n      locations: 49,\r\n      count: 187117\r\n    },\r\n    { name: \"Serbia\", code: \"RS\", cities: 4, locations: 6, count: 124721 },\r\n    { name: \"Singapore\", code: \"SG\", cities: 1, locations: 1, count: 1275 },\r\n    { name: \"Slovakia\", code: \"SK\", cities: 8, locations: 38, count: 1706029 },\r\n    { name: \"Slovenia\", code: \"SI\", cities: 8, locations: 8, count: 104826 },\r\n    {\r\n      name: \"South Africa\",\r\n      code: \"ZA\",\r\n      cities: 1,\r\n      locations: 11,\r\n      count: 582506\r\n    },\r\n    {\r\n      name: \"Spain\",\r\n      code: \"ES\",\r\n      cities: 115,\r\n      locations: 1107,\r\n      count: 15009468\r\n    },\r\n    { name: \"Sri Lanka\", code: \"LK\", cities: 1, locations: 1, count: 13775 },\r\n    { name: \"Sweden\", code: \"SE\", cities: 3, locations: 15, count: 333209 },\r\n    {\r\n      name: \"Switzerland\",\r\n      code: \"CH\",\r\n      cities: 14,\r\n      locations: 25,\r\n      count: 976837\r\n    },\r\n    {\r\n      name: \"Taiwan, Province of China\",\r\n      code: \"TW\",\r\n      cities: 30,\r\n      locations: 77,\r\n      count: 4845341\r\n    },\r\n    { name: \"Thailand\", code: \"TH\", cities: 34, locations: 69, count: 4673029 },\r\n    { name: \"Turkey\", code: \"TR\", cities: 43, locations: 152, count: 5640285 },\r\n    { name: \"Uganda\", code: \"UG\", cities: 1, locations: 1, count: 18363 },\r\n    {\r\n      name: \"United Arab Emirates\",\r\n      code: \"AE\",\r\n      cities: 2,\r\n      locations: 2,\r\n      count: 37779\r\n    },\r\n    {\r\n      name: \"United Kingdom\",\r\n      code: \"GB\",\r\n      cities: 112,\r\n      locations: 162,\r\n      count: 8976829\r\n    },\r\n    {\r\n      name: \"United States\",\r\n      code: \"US\",\r\n      cities: 780,\r\n      locations: 2104,\r\n      count: 52436534\r\n    },\r\n    { name: \"Uzbekistan\", code: \"UZ\", cities: 1, locations: 1, count: 10984 },\r\n    { name: \"Viet Nam\", code: \"VN\", cities: 2, locations: 3, count: 56422 },\r\n  ];\r\n\r\n\r\n","import lodash from \"lodash\";\nimport axios from \"axios\";\n\nexport const fetchCity = countries => async dispatch => {\n  const openaq = await axios.create({\n    baseURL: \"https://api.openaq.org/v1/latest\",\n    params: {\n      country: countries,\n      limit: 1000,\n      parameter: \"pm10\"\n    }\n  });\n\n  const response = await openaq.get();\n  return dispatch({\n    type: \"CITY_FETCHED\",\n    payload: response\n  });\n};\n\nexport const fetchCityDetails = cityName => dispatch =>\n  _fetchCityDetails(cityName, dispatch);\nconst _fetchCityDetails = lodash.memoize(async (cityName, dispatch) => {\n  const mediawiki = await axios.create({\n    baseURL: \"https://en.wikipedia.org/w/api.php\",\n    params: {\n      action: \"opensearch\",\n      prop: \"description\",\n      search: cityName,\n      origin: \"*\",\n      format: \"json\"\n    }\n  });\n  const response = await mediawiki.get();\n  return dispatch({\n    type: \"CITY_DETAILS_FETCHED\",\n    payload: response.data,\n    cityName\n  });\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchCityDetails } from \"../../action\";\n\nclass ListOfCity extends React.Component {\n  render() {\n    const { city } = this.props;\n    let renderList = city;\n\n    if (!city) {\n      return (renderList = (\n        <div className=\"text-center info\">\n          <b>Check The Most Polluted Cities In The Selected Country</b>\n        </div>\n      ));\n    }\n    let resultsCityList = city.data.results;\n    let fullListOfCity = [];\n    let sortedList = [];\n    let lastUpdateTime = \"\";\n    let dateOfUpdateData = \"\";\n    let d = new Date();\n    let today =\n      d.getFullYear() +\n      \"-\" +\n      (\"0\" + (d.getMonth() + 1)).slice(-2) +\n      \"-\" +\n      (\"0\" + d.getDate()).slice(-2);\n\n    let sorts = (x, y) => {\n      return y.measurements[0].value - x.measurements[0].value;\n    };\n    fullListOfCity.push(resultsCityList.sort(sorts));\n\n    // sorted the old values\n    fullListOfCity[0].forEach(cities => {\n      lastUpdateTime = cities.measurements[0].lastUpdated;\n      dateOfUpdateData = lastUpdateTime.slice(0, 10);\n      if (dateOfUpdateData === today) {\n        return sortedList.push(cities);\n      }\n    });\n    console.log(sortedList)\n    // filter data, remove the duplicate city and send request for description\n    let filterCityList = [...new Set(sortedList.map(item =>item.city))];\n    //  item.measurements[0].value\n    console.log(filterCityList)\n    filterCityList.forEach((cities, index) => {\n      if (index < 10) {\n        this.props.fetchCityDetails(cities);\n      }\n    });\n\n    renderList = filterCityList.map((cities, index) => {\n      if (index < 10) {\n\n      let dataTrget = `#${index}`;\n      let description = \"\";\n      let link = \"\";\n      let lastUpdate = \"\";\n      let pollution = \"\" ;\n\n      sortedList.forEach((el, index) =>{\n        if (index < 10) {\n        if (cities === el.city) {\n          pollution = parseFloat(el.measurements[0].value).toFixed(2);\n          lastUpdate = el.measurements[0].lastUpdated.slice(0, 10) + ' ' +el.measurements[0].lastUpdated.slice(11, 16)\n        }\n      }})\n      // search description to city\n      if (this.props.cityDescription[index] !== undefined) {\n        this.props.cityDescription.forEach(item => {\n          if (item[0] === cities) {\n            description = item[2][0];\n            link = item[3][0];\n          }\n        });\n      }\n      \n        \n        return (\n          <div className=\"card\" key={cities + index}>\n            <div\n              className=\"card-header\"\n              id={cities}\n              role=\"button\"\n              data-toggle=\"collapse\"\n              data-target={dataTrget}\n              aria-expanded=\"false\"\n              aria-controls={index}\n            >\n              <div className=\"row flex\">\n                <div className='flex cityName'>\n                  <h3 className=\"position col-2\">{index + 1}</h3>\n                  <h3 className=\"mb-0 cityName col-10\">{cities}</h3>\n                </div>\n                <div className='pollution'>\n                  <div className='flex'><span>Date:</span><span>{lastUpdate}</span> </div>\n                  <div className='flex'><span>Pollution (pm10):</span><span>{pollution} &mu;g/m<sup>3</sup></span>  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              id={index}\n              className=\"collapse\"\n              aria-labelledby=\"headingOne\"\n              data-parent=\"#accordionExample\"\n            >\n              <div className=\"card-body\">\n                <p>{description}</p>\n                <p className=\"float-right\">\n                  <a href={link}>More information</a>\n                </p>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    });\n    return <div>{renderList}</div>;\n  }\n}\nconst mapStateToProps = state => {\n  return { cityDescription: state.citiesDescription };\n};\nexport default connect(\n  mapStateToProps,\n  { fetchCityDetails }\n)(ListOfCity);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchCity } from \"../../action\";\nimport { city } from \"./listOfCountry\";\n\nclass SearchInput extends React.Component {\n  state = { term: \"\", errors: \"\" };\n  componentWillMount() {\n    let data = sessionStorage.getItem(\"key\");\n    if (data) {\n      this.setState({ term: data });\n    }\n  }\n  componentDidMount() {\n    this.check();\n  }\n\n  check = () => {\n    let country = \"\";\n    if (this.state.term) {\n      country = this.state.term.toLowerCase();\n    }\n\n    city.forEach(el => {\n      let countryName = el.name.toLowerCase();\n      if (country === countryName) {\n        console.log(el.code)\n        return this.props.fetchCity(el.code);\n      }\n    });\n  };\n\n  onInputChange = event => {\n    this.setState({ term: event.target.value });\n  };\n  onFormSubmit = event => {\n    event.preventDefault();\n    let country = this.state.term.toLowerCase();\n    // if (\n    //   country !== \"poland\" &&\n    //   country !== \"france\" &&\n    //   country !== \"germany\" &&\n    //   country !== \"spain\"\n    // ) {\n    //   this.setState({\n    //     errors: \"*Please check country name\"\n    //   });\n    // } else {\n    //   this.setState({ errors: \"\" });\n    // }\n    sessionStorage.setItem(\"key\", country);\n    this.check();\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"row \">\n          <div />\n          <div className=\"col-3\" />\n          <div className=\"col-6 search\">\n            <div className=\"row my-1\">\n              <div className=\"input-group col-10\">\n                <form onSubmit={this.onFormSubmit}>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"validationDefault01\"\n                    placeholder=\"  Search . . .\"\n                    value={this.state.term}\n                    onChange={this.onInputChange}\n                  />\n                </form>\n              </div>\n              <div className=\"col-2 serach\">\n                <span className=\"float-right\">\n                  <i className=\"fas fa-search fa-2x\" onClick={this.onFormSubmit} />\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-3\" />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"text-center error\">{this.state.errors}</div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return { cityList: state.citiesList };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchCity }\n)(SearchInput);\n","import React from \"react\";\nimport ListOfCity from \"./ListOfCity\";\nimport SearchInput from \"./SearchInput\";\n\nimport { connect } from \"react-redux\";\nimport { fetchCity } from \"../../action\";\n\n\nclass Search extends React.Component {\n  render() {\n    return (\n      <div>\n        <ul className=\"slideshow\">\n          <li>\n            <span>Image 01</span>\n            <div className=\"animation-photo\">\n              <h3>· · Paris · ·</h3>\n            </div>\n          </li>\n          <li>\n            <span>Image 02</span>\n            <div className=\"animation-photo\">\n              <h3>· · Warsaw · ·</h3>\n            </div>\n          </li>\n          <li>\n            <span>Image 03</span>\n            <div className=\"animation-photo\">\n              <h3>· · Madrid · ·</h3>\n            </div>\n          </li>\n          <li>\n            <span>Image 04</span>\n            <div className=\"animation-photo\">\n              <h3>· · Berlin · ·</h3>\n            </div>\n          </li>\n        </ul>\n\n        <div className=\"container searchLine\">\n          <SearchInput />\n          <div className=\"CityList\">\n            <ListOfCity city={this.props.cityList[0]} />\n          </div>\n          <footer className=\"copyright text-center text-light\">\n            <div>&copy; by Michal Oznerek.</div>\n            <div>\n              Powered by \n              <a href=\"https://openaq.org/\" className=\"link\">\n                openaq.org\n              </a>\n              &\n              <a\n                href=\"https://www.mediawiki.org/wiki/MediaWiki\"\n                className=\"link\"\n              >\n                mediawiki.org\n              </a>\n            </div>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return { cityList: state.citiesList };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchCity }\n)(Search);\n","import React from 'react'\nimport Search from './searchCity'\n\nconst App = () => {\n    return (\n        <div> \n            <Search />\n        </div>\n    )\n}\n\nexport default App","import { combineReducers } from \"redux\";\n\nexport const renderCitiesList = (state = [], action) => {\n  switch (action.type) {\n    case \"CITY_FETCHED\":\n      return [action.payload];\n    default:\n      return state;\n  }\n};\nexport const renderCitiesDescription = (state = [], action) => {\n  switch (action.type) {\n    case \"CITY_DETAILS_FETCHED\":\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  citiesList: renderCitiesList,\n  citiesDescription: renderCitiesDescription\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware} from 'redux'; \nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nReactDOM.render(\n    <Provider store ={store} >\n        <App />        \n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}